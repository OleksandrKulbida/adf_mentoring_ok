{
	"name": "Module1104",
	"properties": {
		"activities": [
			{
				"name": "GetURL",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetProperties",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().globalParameters.SecretURIValue,'?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "SendSuccessEmail",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetURL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@activity('GetURL').output.value",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"pipelineName": "@{pipeline().Pipeline}",
						"pipelineStatus": "success",
						"receiver": "@{pipeline().parameters.receiver}",
						"message": "The pipeline @{pipeline().Pipeline} from the data factory @{pipeline().DataFactory} was successfully finished!"
					}
				}
			},
			{
				"name": "GetProperties",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT file_name,\n      container_name,\n      folder_name,\n      destination_table,\n      schema_name,\n      column_delimiter,\nrow_delimiter,\n      DIU,\nmapping,\n\t  CONCAT(schema_name,'.',destination_table) as schema_table\t  \n  FROM etl.tControlMetadata\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DB_Movies_Parametrizated",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "tControlMetadata",
							"schema_name": "etl"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "GetURL2",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetProperties",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().globalParameters.SecretURIValue,'?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "SendFailEmail",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetURL2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@activity('GetURL2').output.value",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"pipelineName": "@{pipeline().Pipeline}",
						"pipelineStatus": "fail",
						"receiver": "@{pipeline().parameters.receiver}",
						"message": "The pipeline @{pipeline().Pipeline} from the data factory @{pipeline().DataFactory} failed with the message: @{activity('GetProperties').error.Message}!"
					}
				}
			}
		],
		"parameters": {
			"receiver": {
				"type": "string",
				"defaultValue": "oleksandr_kulbida1@epam.com"
			}
		},
		"variables": {
			"URLEmail": {
				"type": "String"
			},
			"pipelineStatus": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-05-27T21:23:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}